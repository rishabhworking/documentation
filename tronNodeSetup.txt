Install the Python 3.7

https://tecadmin.net/install-python-3-7-on-ubuntu-linuxmint/


Install Java 8 


sudo add-apt-repository universe
sudo apt-get install -y software-properties-common --no-install-recommends
sudo apt-get install openjdk-8-jdk
sudo apt-get update

RUN

. ./venv/bin/activate
tron-cli i
xbondTron
xbondAdmin
XbondAdmin123@
db.createUser( { user: "xbondAdmin", pwd: "XbondAdmin123@", roles: [ "readWrite" ] } )

pip3 install troncli


https://github.com/tronprotocol/Documentation/blob/master/TRX/Solidity_and_Full_Node_Deployment_EN.md
https://www.digitalocean.com/community/tutorials/how-to-install-java-with-apt-get-on-ubuntu-16-04
https://github.com/tronprotocol/java-tron
https://github.com/tronprotocol/tron-deployment
Adminpc123!


---------------------------------------
Setup Java on the server:

If you have java already installed and it's open-jdk then remove it:
sudo apt-get autoremove openjdk-8-jre
sudo apt-get purge openjdk-8-jdk

https://stackoverflow.com/questions/55920389/e-package-oracle-java8-installer-has-no-installation-candidate

Create an Oracle account and then download the suitable JDK for your platform.
https://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html

Upload the Binaries to the server.

In server:

create a directory /opt/jdk

Then copy the tarball to the /opt/jdk and extract it there.

When you untar the tarball it will create a directory like this:
/opt/jdk/jdk1.8.0_202

Now set path:
update-alternatives --install /usr/bin/java java /opt/jdk/jdk1.8.0_202/bin/java 100
update-alternatives --install /usr/bin/javac javac /opt/jdk/jdk1.8.0_202/bin/javac 100

Syntax for path:

$update-alternatives --install /usr/bin/java java /opt/jdk/jdk1.8.0_$YourVersion$/bin/java 100
$update-alternatives --install /usr/bin/javac javac /opt/jdk/jdk1.8.0_$YourVersion$/bin/javac 100

================================================================================================================================================
                                              Latest and Most Reliable
Create a directory "deploy":
mkdir deploy

Go inside the "deploy":
cd deploy

git clone https://github.com/tronprotocol/java-tron.git

cd java-tron
git checkout -t origin/master

Compile Code:

cd java-tron

./gradlew build

Once compilation is done you will find the binaries in: 
/root/deploy/java-tron/build/libs 

Copy and paste the binaries to a newly created fullnode directory:
mkdir /root/deploy/fullnode
cp /root/deploy/java-tron/build/libs/FullNode.jar /root/deploy/fullnode/FullNode.jar



