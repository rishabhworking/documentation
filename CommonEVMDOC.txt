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
-----------------------------------------------------------------

Download Geth:

wget https://github.com/rishabhworking/temp/releases/download/2.0/geth-alltools-linux-amd64-1.10.26-e5eb32ac.tar.gz && tar -xzvf geth-alltools-linux-amd64-1.10.26-e5eb32ac.tar.gz && cd geth-alltools-linux-amd64-1.10.26-e5eb32ac/ && sudo cp * /usr/local/bin && geth version && cd ~ && rm -rf geth-alltools-linux-amd64-1.10.26-e5eb32ac && rm geth-alltools-linux-amd64-1.10.26-e5eb32ac.tar.gz


-----------------------------------------------------------------

Ports:

Port numbers between 1024 and 49151 are known as REGISTERED ports, which can be used by specific applications or services. 
Port numbers above 49151 are known as dynamic or PRIVATE ports, which can be used by any application.

-----------------------------------------------------------------

Installing Nginx and Certbot for Reverse Proxy, Rate Limit and SSL:

Ubuntu:
sudo apt update && sudo apt install nginx -y && sudo apt install certbot python3-certbot-nginx -y
sudo apt update && sudo apt install apache2 -y && sudo apt install certbot python3-certbot-apahce2 -y

CentOS:
For CentOS 7: yum install certbot python2-certbot-apache
For CentOS 8: dnf install certbot python3-certbot-apache
-----------------------------------------------------------------

Checking JSON RPC Response from Terminal:

curl -X POST -H "Content-Type: application/json" --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' http://localhost:8545

Installing WebSocket Tool and Checking reponse from local terminal:

sudo npm install -g wscat
wscat -c ws://localhost:8546

-----------------------------------------------------------------

Clean a build:
rm -rf _build && rm -rf deps && rm -rf apps/block_scout_web/assets/node_modules && rm -rf apps/explorer/node_modules && rm -rf logs/prod

Recompile After CSS Changes:
cd apps/block_scout_web/assets/ && npm run build && cd ../../../ && mix phx.digest && screen mix phx.server

-----------------------------------------------------------------
Change Fee from Gwei to nTICKER

Find and Replace Gwei and gwei to equivalent representation.

-----------------------------------------------------------------

Regular domain setup and Nginx Conf:

sudo nano /etc/nginx/sites-available/domain.com.conf

limit_req_zone $binary_remote_addr zone=limit:4m rate=6r/s; # 4MB Memory 6 requests per second, change if have more resources
server {
    server_name domain.com;
    access_log  /var/log/nginx/explorer.access.log;
    error_log  /var/log/nginx/explorer.error.log;

    location / {
        limit_req zone=limit burst=18; # 18 Max Requests under 3 seconds
        proxy_pass http://localhost:17179/;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }


}

sudo ln -s /etc/nginx/sites-available/domain.com.conf /etc/nginx/sites-enabled/domain.com.conf

-----------------------------------------------------------------

Public RPC Node Nginx Conf:
                                                                   
limit_req_zone $binary_remote_addr zone=limit:2m rate=3r/s; # 2MB Memory 3 requests per second, change if have more resources

server {
  server_name domain.com;


  location ^~ / {
      limit_req zone=limit burst=15; # 15 Max Requests under 5 seconds
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_pass    http://127.0.0.1:8545/; #http port
  }

  location ^~ /ws {
      limit_req zone=limit burst=15; # 15 Max Requests under 5 seconds
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_pass   http://127.0.0.1:8546/; #ws port
  }

}


-----------------------------------------------------------------

Private RPC Node Nginx Conf:
                                                                   
server {
  server_name stlgastupi.ariettachain.tech;


  location ^~ / {
      if ($http_host != "example.com") {
      return 403;
      }
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_pass    http://127.0.0.1:8545/; #http port
  }

  location ^~ /ws {
      if ($http_host != "example.com") {
      return 403;
      }
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_pass   http://127.0.0.1:8546; #ws port
  }

}
-----------------------------------------------------------------

Faucet Nginx Conf:

limit_req_zone $binary_remote_addr zone=limit:2m rate=3r/s;
server {
    listen 80;
    server_name domain.com;

    location / {
       limit_req zone=limit burst=15; 
        proxy_pass http://localhost:8080;
        # Additional proxy configuration if required
    }
}

Faucet Command: 

screen eth-faucet -httpport 8080 -faucet.minutes 120 -proxycount 1 -wallet.provider http://localhost:8545 -wallet.keyjson keystoremezo -wallet.keypass password.txt 

-----------------------------------------------------------------

Facuet local compilation commands:

/home/blissedmonk/go1.20.3.linux-amd64/go/bin/./go generate
/home/blissedmonk/go1.20.3.linux-amd64/go/bin/./go build -o eth-faucet
./eth-faucet -httpport 8080 -wallet.provider http://localhost:8545 -wallet.keyjson keystoreupcg -wallet.keypass password.txt

-----------------------------------------------------------------

sudo mkdir -p /var/www/your_domain/html

sudo chown -R $USER:$USER /var/www/your_domain/html

sudo chmod -R 755 /var/www/your_domain

sudo nano /var/www/your_domain/html/index.html

<html>
    <head>
        <title>Welcome to your_domain!</title>
    </head>
    <body>
        <h1>Success!  The your_domain server block is working!</h1>
    </body>
</html>

sudo nano /etc/nginx/sites-available/your_domain.conf

server {
        listen 80;
        listen [::]:80;

        root /var/www/your_domain/html;
        index index.html index.htm index.nginx-debian.html;

        server_name your_domain www.your_domain;

        location / {
                try_files $uri $uri/ =404;
        }
}

sudo ln -s /etc/nginx/sites-available/your_domain.conf /etc/nginx/sites-enabled/your_domain.conf

-----------------------------------------------------------------
#!/usr/bin/env bash

# Update & upgrade system
sudo apt -y update && sudo apt -y upgrade

# go to your home dir
cd ~

# download deb
wget https://packages.erlang-solutions.com/erlang-solutions_2.0_all.deb

# download key
wget https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc

# install repo
sudo dpkg -i erlang-solutions_2.0_all.deb

# install key
sudo apt-key add erlang_solutions.asc

# remove deb
rm erlang-solutions_2.0_all.deb

# remove key
rm erlang_solutions.asc

# Add NodeJS repo
sudo curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -

# Install Rust
sudo curl https://sh.rustup.rs -sSf | sh -s -- -y

# Install required version of Erlang
sudo apt -y install esl-erlang=1:24.*

# Install required version of Elixir
cd ~
mkdir /usr/local/elixir
wget https://github.com/elixir-lang/elixir/releases/download/v1.13.4/Precompiled.zip
sudo unzip -d /usr/local/elixir/ Precompiled.zip
rm Precompiled.zip
sudo ln -s /usr/local/elixir/bin/elixir /usr/local/bin/elixir
sudo ln -s /usr/local/elixir/bin/mix /usr/local/bin/mix
sudo ln -s /usr/local/elixir/bin/iex /usr/local/bin/iex
sudo ln -s /usr/local/elixir/bin/elixirc /usr/local/bin/elixirc
elixir -v

# Install NodeJS
sudo apt -y install nodejs

# Install Cargo
sudo apt -y install cargo

# Install other dependencies
sudo apt -y install automake libtool inotify-tools gcc libgmp-dev make g++ git

# Install PostgreSQL
sudo apt -y install postgresql postgresql-contrib
sudo systemctl start postgresql.service
sudo -u postgres psql -c "CREATE USER blockscout WITH PASSWORD 'Passw0Rd'"
sudo -u postgres psql -c "ALTER USER blockscout WITH SUPERUSER"
sudo -u blockscout psql -c "CREATEDB blockscout"
##sudo -u blockscout psql blockscout
export DATABASE_URL=postgresql://blockscout:Passw0Rd@localhost:5432/blockscout

# Clone and compile BlockScout
cd ~
tar -xzvf blockscout.tar.gz
cd blockscout
mix deps.get -y
mix local.rebar --force
KEY=$(mix phx.gen.secret)
export SECRET_KEY_BASE="$KEY"
export SECRET_KEY_BASE="$KEY"
#OQr4tYJONhBKaZdpt0nHvdXrEGl9e6mWgfNcZBiU9DiHJO6mJyiGMWxvCvI+O3Kb
export MIX_ENV=prod
mix local.hex --force
mix do deps.get, local.rebar --force, deps.compile, compile
mix do ecto.drop, ecto.create, ecto.migrate
cd apps/block_scout_web/assets
sudo npm install
sudo node_modules/webpack/bin/webpack.js --mode production
cd ~/blockscout
npm install --save solc

-----------------------------------------------------------------

ENV Variables for Geth EVM Chains:

export DATABASE_URL=postgresql://blockscout:Passw0Rd@localhost:5432/blockscout
export LANG=en_US.UTF-8
export LANGUAGE=en_US
export LC_ALL=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export ETHEREUM_JSONRPC_HTTP_URL=http://localhost:8545
export ETHEREUM_JSONRPC_WS_URL=ws://localhost:8546
export ETHEREUM_JSONRPC_VARIANT=geth
export BLOCKSCOUT_PROTOCOL=https
export PORT=4000
export MIX_ENV=prod
export COIN="Mezocoin"
export COIN_NAME="MEZO"
export SECRET_KEY_BASE=jupeH1o57Fg2dLs6WWkqXbS5yef0Mnndu+uS2qrE0Hm7YNZ0WodHemi7RjZ9KgeJ
export ECTO_USE_SSL=false
export NETWORK="MainNet"
export SUBNETWORK="Mezocoin"
export DISABLE_EXCHANGE_RATES="true"
export LINK_TO_OTHER_EXPLORERS="false"
export BLOCK_TRANSFORMER=clique
export INDEXER_DISABLE_BLOCK_REWARD_FETCHER="true"
export INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER="true"
export INDEXER_DISABLE_INTERNAL_TRANSACTIONS_FETCHER="true"
export CHAIN_ID=18048
export POOL_SIZE=10
export POOL_SIZE_API=10
export LOGO=/images/headerfooter.png
export BLOCKSCOUT_HOST=mezoscan.com

-----------------------------------------------------------------

ENV Variables for Edge EVM Chains:

export ETHEREUM_JSONRPC_HTTP_URL="localhost:16367"
export ETHEREUM_JSONRPC_TRACE_URL="localhost:16367"
export DATABASE_URL=postgresql://blockscout:Passw0Rd@localhost:5432/blockscout
export SECRET_KEY_BASE=E/FoaI5+rO3uU6Lk+9YHzhOx8ymPI6sva4t0ZSau5lVOzpDxxKISDdOOoInBs4qT
export ETHEREUM_JSONRPC_WS_URL="ws://localhost:16367/ws"
export CHAIN_ID=92522
export NETWORK="MainNet"
export SUBNETWORK="Arietta"
export LOGO="/images/polygon_edge_logo.svg"
export LOGO_FOOTER="/images/polygon_edge_logo.svg"
export COIN="Arietta"
export COIN_NAME="ASC"
export INDEXER_DISABLE_BLOCK_REWARD_FETCHER="true"
export INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER="true"
export INDEXER_DISABLE_INTERNAL_TRANSACTIONS_FETCHER="true"
export MIX_ENV="prod"
export BLOCKSCOUT_PROTOCOL="https"
export PORT=4000
export DISABLE_EXCHANGE_RATES="true"
export POOL_SIZE=10
export POOL_SIZE_API=15
export ECTO_USE_SSL="false"
export BLOCKSCOUT_HOST=explorer.ariettachain.tech

-----------------------------------------------------------------



admin.addPeer("") 

admin.addPeer("enode://1426f40a2a99be974963b8187ae7e0c7d9177b02c63832efda482d63a63095b91386bb9142e7b3314701c66a5a40ceafe3f7137c52e58dd128ceb40f40264bcc@170.187.193.100:5557") 




=========================================================================================

sudo nano /etc/nginx/sites-available/domain.com.conf


limit_req_zone $binary_remote_addr zone=limit:4m rate=6r/s; # 4MB Memory, 6 requests per second

server {
    listen 80;
    server_name domain.com;

    access_log /var/log/nginx/coinrpc.access.log;
    error_log /var/log/nginx/coinrpc.error.log;

    location / {
        limit_req zone=limit burst=18; # 18 Max Requests under 3 seconds
        if ($http_host != "example.com") {
        return 403;
        }
        proxy_pass http://127.0.0.1:4442/; # Your Bitcoin RPC server address
        proxy_http_version 1.1;
        
        # Set the authorization header with the Base64-encoded credentials
        proxy_set_header Authorization "Basic cG93c2hhcmVzbm9kZTE6alc3ek80djRKRXBCcXdPM0phY1lpeHp3M3BicmJPMFg3V3hKb01MVFphc1k2OUY0ZzU=";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}



sudo ln -s /etc/nginx/sites-available/domain.com.conf /etc/nginx/sites-enabled/domain.com.conf


echo -n 'powsharesnode1:jW7zO4v4JEpBqwO3JacYixzw3pbrbO0X7WxJoMLTZasY69F4g5' | base64
curl -s -X POST --data-binary '{"jsonrpc":"2.0","id":"curltext","method":"getwalletinfo","params":[]}' -H 'content-type: text/plain;' http://rpcusername:rpcpassword@127.0.0.1:3298

=========================================================================================



















